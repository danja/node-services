[main]
ldapRealm = org.apache.shiro.realm.ldap.JndiLdapRealm
ldapRealm.userDnTemplate = uid={0},ou=agents,dc=hyperdata,dc=it
ldapRealm.contextFactory.url = ldap://hyperdata.it:389
ldapRealm.contextFactory.authenticationMechanism = simple

# Add these lines for group-to-role mapping
ldapRealm.groupRolesMap = "cn=service-admin,ou=groups,dc=hyperdata,dc=it":"service-admin", "cn=fuseki-admin,ou=groups,dc=hyperdata,dc=it":"fuseki-admin", "cn=fuseki-foowiki,ou=groups,dc=hyperdata,dc=it":"fuseki-foowiki"

securityManager.realms = $ldapRealm

[urls]
# Public read access
/**/query = anon
/**/get = anon
/**/sparql = anon

# Admin access
/$/status = authcBasic, roles[service-admin]
/$/datasets = authcBasic, roles[service-admin]
/$/server = authcBasic, roles[service-admin]
/$/metrics = authcBasic, roles[service-admin]
/$/ping = anon
/$/stats = anon

# Dataset management
/$/dataset = authcBasic, roles[service-admin, fuseki-admin]

# Foowiki specific access
/foowiki/update = authcBasic, roles[service-admin, fuseki-admin, fuseki-foowiki]
/foowiki/data = authcBasic, roles[service-admin, fuseki-admin, fuseki-foowiki]
/foowiki/upload = authcBasic, roles[service-admin, fuseki-admin, fuseki-foowiki]

# Default rule
/** = authcBasic
